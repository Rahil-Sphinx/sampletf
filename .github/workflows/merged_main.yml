name: Deployment
run-name: ${{ github.event_name }} in branch ${{ github.ref_name }}-${{ github.run_number }}

# Please DO NOT deploy automatically! You can trigger all github actions by hand: https://github.com/Arrk-Engineering-GmbH/arrk-ds/actions. 
on:
  workflow_dispatch:

permissions:
  contents: read
  actions: read
  checks: write

concurrency:
  group: ${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  set-environment:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set-env.outputs.environment }}
    steps:
      - name: Extract environment from tag
        id: set-env
        run: |
          echo "GITHUB_REF: $GITHUB_REF"
          ENVIRONMENT=$(echo "${GITHUB_REF##*/}" | sed -E 's/^(dev|prod).*/\1/')
          echo "environment=$ENVIRONMENT"
          echo "environment=$ENVIRONMENT" >> $GITHUB_OUTPUT

  owasp-scan:
    runs-on: self-hosted    
    steps:      
      - name: Change ownership of directory
        run: sudo chown -R $USER:$USER /home/ubuntu/actions-runner/_work/arrk-ds
      - name: checkout the code repo
        uses: actions/checkout@v4
      - name: Setup node & npm
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: install packages
        run: |
          cd FrontEnd
          npm install
          cd ..
      - name: Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: "ds_platform_frontend"
          path: "./FrontEnd"
          format: "HTML"
          out: "reports"
      - name: rename frontend report file
        run: sudo mv reports/dependency-check-report.html reports/frontend-${{github.ref_name}}-report.html
      - name: setup java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"
          cache: "maven"
      - name: Build project with Maven
        run: |
          cd BackEnd
          mvn clean install -DskipTests
          cd ..
      - name: Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: "SpringSecurityJWT"
          path: "./BackEnd"
          format: "HTML"
          out: "reports"
        env:
          JAVA_HOME: /opt/jdk
      - name: rename backend report file
        run: sudo mv reports/dependency-check-report.html reports/backend-${{github.ref_name}}-report.html
      - name: Upload Test results
        uses: actions/upload-artifact@v4
        with:
          name: Depcheck-report
          path: ${{github.workspace}}/reports
  Docker_Build:
    runs-on: self-hosted
    needs: owasp-scan
    steps:
      - name: Build frontend docker image
        run: |
          cd FrontEnd
          docker buildx build -t arrk-frontend:latest .
          cd ..
      - name: Build backend docker image
        run: |
          cd BackEnd
          docker buildx build -t arrk-backend:latest .
          cd ..
  ECR_Push:
    needs: [set-environment, Docker_Build]
    runs-on: self-hosted
    steps:
      - name: Print Environment
        run: |
          echo "Environment: ${{ needs.set-environment.outputs.environment}}"
      - name: Setup AWS ECR Details
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{secrets.AWS_REGION}}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Tag frontend docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ needs.set-environment.outputs.environment == 'dev' && 'arrk_ds_ecr_dev' || 'arrk_ds_prod' }}
          IMAGE_TAG: ${{github.ref_name}}
        run: docker tag arrk-frontend:latest $ECR_REGISTRY/$ECR_REPOSITORY:frontend-$IMAGE_TAG  
      - name: Push frontend docker image to ECR 
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }} .
          ECR_REPOSITORY: ${{ needs.set-environment.outputs.environment == 'dev' && 'arrk_ds_ecr_dev' || 'arrk_ds_prod' }}
          IMAGE_TAG: ${{github.ref_name}}
        run: docker push $ECR_REGISTRY/$ECR_REPOSITORY:frontend-$IMAGE_TAG
      - name: Tag backend docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ needs.set-environment.outputs.environment == 'dev' && 'arrk_ds_ecr_dev' || 'arrk_ds_prod' }}
          IMAGE_TAG: ${{github.ref_name}}
        run: docker tag arrk-backend:latest $ECR_REGISTRY/$ECR_REPOSITORY:backend-$IMAGE_TAG
      - name: Push backend docker image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ needs.set-environment.outputs.environment == 'dev' && 'arrk_ds_ecr_dev' || 'arrk_ds_prod' }}
          IMAGE_TAG: ${{github.ref_name}}
        run: docker push $ECR_REGISTRY/$ECR_REPOSITORY:backend-$IMAGE_TAG 
      - name: Delete all docker images
        run: docker rmi -f $(docker images -aq)
  Update-Helm-Chart:
    needs: [set-environment, ECR_Push]
    runs-on: self-hosted
    steps:
      - name: Print Environment
        run: |
          echo "Environment: ${{ needs.set-environment.outputs.environment}}"
      - name: Change ownership of directory
        run: sudo chown -R $USER:$USER /home/ubuntu/actions-runner/_work/arrk-ds/
      - name: checkout k8s manifest repo
        uses: actions/checkout@v4
        with:
          repository: Arrk-Engineering-GmbH/arrk-ds-k8s
          ref: main
          token: ${{ secrets.PAT }}
      - name: Update frontend docker image in values-${{ needs.set-environment.outputs.environment }}.yaml
        run: sed -i "s+208409385559.dkr.ecr.eu-central-1.amazonaws.com/arrk_ds_${{ needs.set-environment.outputs.environment == 'dev' && 'ecr_dev' || 'prod' }}:frontend-.*+208409385559.dkr.ecr.eu-central-1.amazonaws.com/arrk-ds:frontend-${{github.ref_name}}+g" arrk-helm-chart/values-${{ needs.set-environment.outputs.environment }}.yaml
      - name: Update backend docker image in values-${{ needs.set-environment.outputs.environment }}.yaml
        run: sed -i "s+208409385559.dkr.ecr.eu-central-1.amazonaws.com/arrk_ds_${{ needs.set-environment.outputs.environment == 'dev' && 'ecr_dev' || 'prod' }}:backend-.*+208409385559.dkr.ecr.eu-central-1.amazonaws.com/arrk-ds:backend-${{github.ref_name}}+g" arrk-helm-chart/values-${{ needs.set-environment.outputs.environment }}.yaml
      - name: Commit and push updated Kubernetes manifest
        run: |
          git config --global user.email "arrkadmin@arrk-engineering.com"
          git config --global user.name "arrkadmin"
          git add .
          git commit -m "Update Docker image in Kubernetes manifest for tag ${{github.ref_name}}"
          git push origin main
